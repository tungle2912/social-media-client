"use client";
import { useState } from "react";
import { SmileIcon } from "~/common/icon"; // D√πng icon tu·ª≥ ch·ªânh c·ªßa b·∫°n
import styles from "./styles.module.scss"; // ƒê·∫£m b·∫£o r·∫±ng b·∫°n c√≥ file CSS module

// Danh s√°ch c√°c emoji
const emojiList = [
  "üòÄ",
  "üòÅ",
  "üòÇ",
  "ü§£",
  "üòÉ",
  "üòÑ",
  "üòÖ",
  "üòÜ",
  "üòâ",
  "üòä",
  "üòã",
  "üòé",
  "üòç",
  "üòò",
  "ü•∞",
  "üòó",
  "üòô",
  "üòö",
  "üôÇ",
  "ü§ó",
  "ü§©",
  "ü§î",
  "ü§®",
  "üòê",
  "üòë",
  "üò∂",
  "üôÑ",
  "üòè",
  "üò£",
  "üò•",
  "üòÆ",
  "ü§ê",
  "üòØ",
  "üò™",
  "üò´",
  "üò¥",
  "üòå",
  "üòõ",
  "üòú",
  "üòù",
  "ü§§",
  "üòí",
  "üòì",
  "üòî",
  "üòï",
  "üôÉ",
  "ü§ë",
  "üò≤",
  "‚òπÔ∏è",
  "üôÅ",
  "üòñ",
  "üòû",
  "üòü",
  "üò§",
  "üò¢",
  "üò≠",
  "üò¶",
  "üòß",
  "ü•∫",
  "üò®",
  "üò©",
  "ü§Ø",
  "üò¨",
  "üò∞",
  "üò±",
  "ü•µ",
  "ü•∂",
  "üò≥",
  "ü§™",
  "üòµ",
  "üò°",
  "üò†",
  "ü§¨",
  "üò∑",
  "ü§í",
  "ü§ï",
  "ü§¢",
  "ü§Æ",
  "ü§ß",
  "üòá",
  "ü•≥",
];

const EmojiPicker = ({ onEmojiSelect }: { onEmojiSelect: any }) => {
  const [isOpen, setIsOpen] = useState(false);

  // Toggle vi·ªác m·ªü/ƒë√≥ng emoji picker
  const toggleEmojiPicker = () => {
    setIsOpen(!isOpen);
  };

  // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng ch·ªçn emoji
  const handleEmojiClick = (emoji: any) => {
    onEmojiSelect(emoji);
    setIsOpen(false); // ƒê√≥ng picker sau khi ch·ªçn emoji
  };

  return (
    <div className={styles.emojiPicker}>
      <button className={styles.emojiButton} onClick={toggleEmojiPicker}>
        <SmileIcon /> Add Emoji
      </button>
      {isOpen && (
        <div className={styles.emojiGrid}>
          {emojiList.map((emoji, index) => (
            <span
              key={index}
              className={styles.emojiItem}
              onClick={() => handleEmojiClick(emoji)}
            >
              {emoji}
            </span>
          ))}
        </div>
      )}
    </div>
  );
};

export default EmojiPicker;
